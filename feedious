#!/usr/bin/env bash
# José Almeida <jose.afga@gmail.com>

CONFIG_FILE='sources.conf'
SEPARATOR='--------------------'

# Limpa variaveis globais antes de sair
__exit() {
  unset CONFIG_FILE SEPARATOR URL PLAYER channels _options
}

# Verifica se parametro passado e uma funcao
__is_function() {
  type -p $1 &>/dev/null
}

__header() {
  echo $SEPARATOR
  echo '     Feedious ▶️   '
  echo $SEPARATOR
}

# Adiciona e exibe uma opcao de menu
__add_option() {
  declare -gA _options["$1"]="$3"

  echo "[$1] $2"
}

# Faz a pergunta e associa com com as opcoes de menu (aceita inteiros apenas)
__ask_option() {
  local -i answer

  printf '%s' "$1"
  read answer

  # Verifica se valor informado esta dentro das opcoes
  if [[ $answer -ge 0 && $answer -lt ${#_options[@]} ]]; then
    __do_option "$answer"
  else
    __ask_option "Valor incorreto. Tente Novamente: "
  fi
}

# Realiza acao associada a opcao
__do_option() {
  __is_function "${_options[$1]}" && ${_options[$1]}

  unset _options # Limpa opcoes anteriores
}

# list_channels() {
#   #/api/v1/search?q=debxp&type=channel&fields=author,authorId,authorUrl
# }

# Realiza a leitura e definicoes do arquivo de configuracao
__parse_config() {
  local config config_channels

  mapfile -t config <"$CONFIG_FILE"

  for cfg in "${config[@]}"; do
    case "$cfg" in
      \#*) continue ;; # comentarios
      \[*\])
        config_channels='false'
        ;;&
      \[Channels\]) # comeco dos canais
        config_channels='true'
        ;;
      *=*)
        if [[ "$config_channels" == 'true' ]]; then
          declare -gA "channels[${cfg/=/]=}"
        else
          declare -g "$cfg"
        fi
        ;;
    esac
  done
}

main_menu() {
  local -i count=0

  __header

  for i in "${!channels[@]}"; do
    __add_option "$((++count))" "${channels[$i]}" "$i"
  done

  echo $SEPARATOR
  __add_option "$((++count))" "Adicionar canal" "__add_channel"
  __add_option "0" "Sair" "__exit"
  echo $SEPARATOR
  __ask_option "Selecione uma opção: "
}

main() {
  __parse_config
  main_menu

  # __exit
}

main "$@"
